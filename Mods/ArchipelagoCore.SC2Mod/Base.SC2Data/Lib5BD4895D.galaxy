include "TriggerLibs/NativeLib"

include "Lib5BD4895D_h"

//--------------------------------------------------------------------------------------------------
// Library: ArchipelagoCore
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib5BD4895D_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib5BD4895D_InitVariables_completed = false;

void lib5BD4895D_InitVariables () {
    int init_i;
    int init_i1;
    int init_j1;
    int init_i2;

    if (lib5BD4895D_InitVariables_completed) {
        return;
    }

    lib5BD4895D_InitVariables_completed = true;

    lib5BD4895D_gv_aP_Core_affectedPlayers = PlayerGroupSingle(1);
    for (init_i = 0; init_i <= 20; init_i += 1) {
        lib5BD4895D_gv_aP_Core_playerFactions[init_i] = "";
    }
    lib5BD4895D_gv_aP_Core_primalZergColor = 4;
    lib5BD4895D_gv_aP_Core_chatboxAnchor = c_anchorTopRight;
    lib5BD4895D_gv_aP_Core_chatbox_x = 500;
    lib5BD4895D_gv_aP_Core_chatbox_y = 350;
    lib5BD4895D_gv_aP_Core_chatbox_offsetY = 40;
    lib5BD4895D_gv_aP_Core_Faction_RAYNORS_RAIDERS = "rr";
    lib5BD4895D_gv_aP_Core_Faction_TERRAN_DOMINION = "td";
    lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG = "pz";
    lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM = "ks";
    lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM_SWITCHABLE_TO_PRIMAL_ZERG = "ks_pz";
    lib5BD4895D_gv_aP_Core_Faction_DAELAAM = "da";
    lib5BD4895D_gv_chatbox.lv_mainpanel = c_invalidDialogId;
    lib5BD4895D_gv_chatbox.lv_chatpanel = c_invalidDialogId;
    lib5BD4895D_gv_chatbox.lv_hiddenpanel = c_invalidDialogId;
    lib5BD4895D_gv_chatbox.lv_chatlabel = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_scrollupbtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_scrolldownbtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_scrollbottonbtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_maxmessages = 50;
    lib5BD4895D_gv_chatbox.lv_scrollstrength = 18;
    lib5BD4895D_gv_chatbox.lv_sizeupbtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_sizedownbtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_size = 3;
    lib5BD4895D_gv_chatbox.lv_countlabel = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_hidebtn = c_invalidDialogControlId;
    lib5BD4895D_gv_chatbox.lv_showbtn = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 7; init_i += 1) {
        lib5BD4895D_gv_aP_Core_rainbowColors[init_i] = 1;
    }
    lib5BD4895D_gv_aP_Core_ui_objectiveSectionSpacing = 20;
    lib5BD4895D_gv_aP_Core_ui_objectiveListItemStartSpacing = 5;
    for (init_i = 0; init_i <= lib5BD4895D_gv_AP_Core_objectiveUsedCategories; init_i += 1) {
        lib5BD4895D_gv_AP_Core_objectiveCategoryEnabled[init_i] = true;
    }
    lib5BD4895D_gv_aP_Core_objectiveDefaultTimer = TimerCreate();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel = c_invalidDialogControlId;
    for (init_i1 = 0; init_i1 <= 8; init_i1 += 1) {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_titleLabel = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_titleBackground = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_listPanel = c_invalidDialogControlId;
        for (init_i2 = 0; init_i2 <= 8; init_i2 += 1) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_objective = c_invalidObjectiveId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_panel = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_checkbox = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_label = c_invalidDialogControlId;
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_counterSuffix = "";
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[init_i1].lv_objectives[init_i2].lv_timer = lib5BD4895D_gv_aP_Core_objectiveDefaultTimer;
        }
    }
    for (init_i1 = 0; init_i1 <= 8; init_i1 += 1) {
        for (init_j1 = 0; init_j1 <= 2; init_j1 += 1) {
            lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[init_i1][init_j1] = -1;
        }
    }
}

// Functions
void lib5BD4895D_gf_AP_Core_MapConfig_setAffectedPlayers (playergroup lp_players) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_affectedPlayers = lp_players;
}

void lib5BD4895D_gf_AP_Core_MapConfig_setPlayerFaction (int lp_player, string lp_faction) {
    // Automatic Variable Declarations
    // Implementation
    if ((lp_faction == lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM_SWITCHABLE_TO_PRIMAL_ZERG)) {
        lib5BD4895D_gv_aP_Core_playerFactions[lp_player] = lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM;
        lib5BD4895D_gv_aP_Core_playerSwitchableFaction[lp_player] = true;
    }
    else {
        lib5BD4895D_gv_aP_Core_playerFactions[lp_player] = lp_faction;
    }
}

void lib5BD4895D_gf_AP_Core_MapConfig_setChatboxPosition (int lp_anchor, int lp_x, int lp_y, int lp_offsetX, int lp_offsetY) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_chatboxAnchor = lp_anchor;
    lib5BD4895D_gv_aP_Core_chatbox_x = lp_x;
    lib5BD4895D_gv_aP_Core_chatbox_y = lp_y;
    lib5BD4895D_gv_aP_Core_chatbox_offsetX = lp_offsetX;
    lib5BD4895D_gv_aP_Core_chatbox_offsetY = lp_offsetY;
}

void lib5BD4895D_gf_AP_Core_MapConfig_setMapInit (trigger lp_initTrigger) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_mapInit = lp_initTrigger;
}

bool lib5BD4895D_gf_AP_Core_IsControllerNotInitialized () {
    // Automatic Variable Declarations
    // Implementation
    if (((TechTreeUnitCount(1, "AP_Core_Controller", c_techCountQueuedOrBetter) < 1) || (TechTreeUnitCount(1, "AP_Core_Controller2", c_techCountQueuedOrBetter) < 1) || (lib5BD4895D_gv_aP_Core_controller == null) || (lib5BD4895D_gv_aP_Core_controller2 == null) || (UnitIsAlive(lib5BD4895D_gv_aP_Core_controller) == false) || (UnitIsAlive(lib5BD4895D_gv_aP_Core_controller2) == false) || ((lib5BD4895D_gv_aP_Core_initFinished == true) && (UnitGetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) == UnitGetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLifeMax, c_unitPropCurrent))))) {
        return true;
    }
    else {
        return false;
    }
}

void lib5BD4895D_gf_AP_Core_sendLocationLocal (int lp_locationIdLocal) {
    // Variable Declarations
    int lv_value;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_value = lp_locationIdLocal + 1;;
    if ((lib5BD4895D_gv_aP_Core_initFinished == true)) {
        if ((lib5BD4895D_gf_AP_Core_IsControllerNotInitialized())) {
            lib5BD4895D_gf_AP_Core_refreshController();
        }

        if ((lp_locationIdLocal <= 13)) {
            UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) - PowI(2.0, lv_value)));
            lib5BD4895D_gv_aP_Core_controllerStatus = (lib5BD4895D_gv_aP_Core_controllerStatus + PowI(2.0, lv_value));
        }
        else {
            UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, c_unitPropCurrent) - PowI(2.0, (lv_value - 15))));
            lib5BD4895D_gv_aP_Core_controller2Status = (lib5BD4895D_gv_aP_Core_controller2Status + PowI(2.0, (lv_value - 15)));
        }
    }

}

void lib5BD4895D_gf_AP_Core_refreshController () {
    // Variable Declarations
    unit lv_currentUnit;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    UnitRemove(lib5BD4895D_gv_aP_Core_controller);
    UnitRemove(lib5BD4895D_gv_aP_Core_controller2);
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    lib5BD4895D_gv_aP_Core_controller = UnitLastCreated();
    UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller, c_unitPropLife, c_unitPropCurrent) - lib5BD4895D_gv_aP_Core_controllerStatus));
    libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller2", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    lib5BD4895D_gv_aP_Core_controller2 = UnitLastCreated();
    UnitSetPropertyFixed(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, (UnitGetPropertyInt(lib5BD4895D_gv_aP_Core_controller2, c_unitPropLife, c_unitPropCurrent) - lib5BD4895D_gv_aP_Core_controller2Status));
}

text lib5BD4895D_gf_getchatboxcontent () {
    // Variable Declarations
    int lv_index;
    text lv_tmptext;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_index = 1;
    lv_tmptext = lib5BD4895D_gv_chatbox.lv_chatmessage[0];

    // Implementation
    while ((lv_index < lib5BD4895D_gv_chatbox.lv_maxmessages)) {
        lv_tmptext = (lib5BD4895D_gv_chatbox.lv_chatmessage[lv_index] + StringExternal("Param/Value/lib_5BD4895D_C38FCBB5") + lv_tmptext);
        lv_index += 1;
    }
    return lv_tmptext;
}

void lib5BD4895D_gf_initchatbox (int lp_anchor, int lp_sizex, int lp_sizey, int lp_offsetx, int lp_offsety) {
    // Variable Declarations
    int lv_btnsize;
    int lv_btnxoffset;
    int lv_chatlblsizex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_btnsize = 35;
    lv_btnxoffset = 35;
    lv_chatlblsizex = (lp_sizex - 110);

    // Implementation
    DialogCreate(lp_sizex, lp_sizey, lp_anchor, lp_offsetx, lp_offsety, true);
    DialogSetTitle(DialogLastCreated(), StringExternal("Param/Value/lib_5BD4895D_DA943ABE"));
    lib5BD4895D_gv_chatbox.lv_mainpanel = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorBottomRight, lv_btnxoffset, 30, StringExternal("Param/Value/lib_5BD4895D_63A08DA4"), StringExternal("Param/Value/lib_5BD4895D_5C0E7029"), "");
    lib5BD4895D_gv_chatbox.lv_scrollbottonbtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorBottomRight, lv_btnxoffset, 65, StringExternal("Param/Value/lib_5BD4895D_01ECC464"), StringExternal("Param/Value/lib_5BD4895D_F3CCECCC"), "");
    lib5BD4895D_gv_chatbox.lv_scrolldownbtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorBottomRight, lv_btnxoffset, 90, StringExternal("Param/Value/lib_5BD4895D_4C80D61A"), StringExternal("Param/Value/lib_5BD4895D_D418EF7A"), "");
    lib5BD4895D_gv_chatbox.lv_scrollupbtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorTopRight, (lv_btnxoffset * 2), 65, StringExternal("Param/Value/lib_5BD4895D_1458BA0D"), StringExternal("Param/Value/lib_5BD4895D_6A6F1572"), "");
    lib5BD4895D_gv_chatbox.lv_sizeupbtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorTopRight, (lv_btnxoffset * 3), 65, StringExternal("Param/Value/lib_5BD4895D_4534657D"), StringExternal("Param/Value/lib_5BD4895D_45A8E99F"), "");
    lib5BD4895D_gv_chatbox.lv_sizedownbtn = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_chatlblsizex, 30, c_anchorTopRight, (lv_btnxoffset * 5), 65, StringExternal("Param/Value/lib_5BD4895D_80AC2922"), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "AP_BottomRight", PlayerGroupAll());
    lib5BD4895D_gv_chatbox.lv_countlabel = DialogControlLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorTopRight, (lv_btnxoffset / 2), (lv_btnxoffset / 2), StringExternal("Param/Value/lib_5BD4895D_EFEE213D"), StringExternal("Param/Value/lib_5BD4895D_C9546BEE"), "");
    lib5BD4895D_gv_chatbox.lv_hidebtn = DialogControlLastCreated();
    DialogCreate(lv_chatlblsizex, (lp_sizey - 136), lp_anchor, lp_offsetx, (lp_offsety - 18), true);
    lib5BD4895D_gv_chatbox.lv_chatpanel = DialogLastCreated();
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogSetPositionRelative(DialogLastCreated(), c_anchorBottomLeft, lib5BD4895D_gv_chatbox.lv_mainpanel, c_anchorBottomLeft, lv_btnxoffset, -36);
    libNtve_gf_CreateDialogItemLabel(DialogLastCreated(), lv_chatlblsizex, 10000, c_anchorBottom, 0, 0, StringToText(""), ColorWithAlpha(0,0,0,0), false, 2.0);
    libNtve_gf_SetDialogItemStyle(DialogControlLastCreated(), "AP_BottomLeft", PlayerGroupAll());
    lib5BD4895D_gv_chatbox.lv_chatlabel = DialogControlLastCreated();
    DialogCreate((lv_btnsize * 3), (lv_btnsize * 3), lp_anchor, lp_offsetx, lp_offsety, true);
    DialogSetImageVisible(DialogLastCreated(), false);
    DialogSetVisible(DialogLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_chatbox.lv_hiddenpanel = DialogLastCreated();
    libNtve_gf_CreateDialogItemButton(DialogLastCreated(), lv_btnsize, lv_btnsize, c_anchorTopRight, (lv_btnxoffset / 2), (lv_btnxoffset / 2), StringExternal("Param/Value/lib_5BD4895D_15729E06"), StringExternal("Param/Value/lib_5BD4895D_D109326B"), "");
    lib5BD4895D_gv_chatbox.lv_showbtn = DialogControlLastCreated();
}

void lib5BD4895D_gf_showhidechatbox (int lp_player, bool lp_visible) {
    // Variable Declarations
    playergroup lv_pg;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_pg = PlayerGroupSingle(lp_player);

    // Implementation
    DialogSetVisible(lib5BD4895D_gv_chatbox.lv_mainpanel, lv_pg, lp_visible);
    DialogSetVisible(lib5BD4895D_gv_chatbox.lv_chatpanel, lv_pg, lp_visible);
}

void lib5BD4895D_gf_sendchatmessage (int lp_fromplayer, string lp_message) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_index = (lib5BD4895D_gv_chatbox.lv_maxmessages - 1);

    // Implementation
    while ((lv_index > 0)) {
        lib5BD4895D_gv_chatbox.lv_chatmessage[lv_index] = lib5BD4895D_gv_chatbox.lv_chatmessage[(lv_index - 1)];
        lv_index -= 1;
    }
    lib5BD4895D_gv_chatbox.lv_messagecount += 1;
    lib5BD4895D_gv_chatbox.lv_chatmessage[0] = StringToText(((IntToString(lib5BD4895D_gv_chatbox.lv_messagecount) + ": ") + lp_message));
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_chatbox.lv_chatlabel, lib5BD4895D_gf_getchatboxcontent(), PlayerGroupAll());
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_chatbox.lv_countlabel, StringToText((IntToString(lib5BD4895D_gv_chatbox.lv_messagecount) + " Total")), PlayerGroupAll());
}

void lib5BD4895D_gf_AP_Core_rainbowController (int lp_player) {
    // Variable Declarations
    int lv_colorIndex;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lib5BD4895D_gv_aP_Core_rainbowKiller[lp_player] = false;
    while (true) {
        if ((lib5BD4895D_gv_aP_Core_rainbowKiller[lp_player] == true)) {
            break;
        }

        PlayerSetColorIndex(lp_player, lib5BD4895D_gv_aP_Core_rainbowColors[lv_colorIndex], true);
        Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
        lv_colorIndex = ModI((lv_colorIndex + 1), 7);
    }
}

int lib5BD4895D_gf_AP_Core_getPlayerColorByIndex (int lp_colorIndex) {
    // Automatic Variable Declarations
    // Implementation
    return lp_colorIndex;
}

void lib5BD4895D_gf_AP_Core_giveBonusSupplies (int lp_player, int lp_amount) {
    // Variable Declarations
    unit lv_supplyHolder;
    int lv_upgrade1SupplyCount;
    int lv_upgrade2SupplyCount;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((TechTreeUnitCount(lp_player, "AP_Core_SupplyHolder", c_techCountQueuedOrBetter) < 1)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_SupplyHolder", c_unitCreateIgnorePlacement, lp_player, Point(0.0, 0.0));
    }

    lv_supplyHolder = UnitGroupUnit(UnitGroup("AP_Core_SupplyHolder", lp_player, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    lv_upgrade2SupplyCount = ModI(lp_amount, 2);
    lv_upgrade1SupplyCount = (lp_amount -  (2 * lv_upgrade2SupplyCount));
    libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "AP_Core_SupplyPerStack", lv_upgrade1SupplyCount);
    libNtve_gf_SetUpgradeLevelForPlayer(lp_player, "AP_Core_SupplyPerStack2", lv_upgrade2SupplyCount);
}

void lib5BD4895D_gf_AP_Core_setFactionColor (string lp_faction, int lp_colorIndex) {
    // Variable Declarations
    int lv_color;
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup autoC0E582B5_g;
    playergroup auto436127A7_g;

    // Variable Initialization
    lv_color = 1;

    // Implementation
    if ((lp_faction == lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG) && (lp_colorIndex <= 16)) {
        lib5BD4895D_gv_aP_Core_primalZergColor = lp_colorIndex;
    }

    if ((lp_colorIndex <= 15)) {
        lv_color = lib5BD4895D_gf_AP_Core_getPlayerColorByIndex(lp_colorIndex);
        autoC0E582B5_g = PlayerGroupAll();
        lv_currentPlayer = -1;
        while (true) {
            lv_currentPlayer = PlayerGroupNextPlayer(autoC0E582B5_g, lv_currentPlayer);
            if (lv_currentPlayer < 0) { break; }
            if ((lp_faction == (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer]))) {
                PlayerSetColorIndex(lv_currentPlayer, lv_color, true);
            }

        }
    }
    else if ((lp_colorIndex == 16)) {
        auto436127A7_g = PlayerGroupAll();
        lv_currentPlayer = -1;
        while (true) {
            lv_currentPlayer = PlayerGroupNextPlayer(auto436127A7_g, lv_currentPlayer);
            if (lv_currentPlayer < 0) { break; }
            if ((lp_faction == (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer]))) {
                lib5BD4895D_gf_AP_Core_rainbowController(lv_currentPlayer);
            }

        }
    }
}

void lib5BD4895D_gf_AP_Core_onLoadFinished () {
    // Variable Declarations
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup auto78288737_g;

    // Variable Initialization

    // Implementation
    lib5BD4895D_gf_initchatbox(lib5BD4895D_gv_aP_Core_chatboxAnchor, lib5BD4895D_gv_aP_Core_chatbox_x, lib5BD4895D_gv_aP_Core_chatbox_y, lib5BD4895D_gv_aP_Core_chatbox_offsetX, lib5BD4895D_gv_aP_Core_chatbox_offsetY);
    auto78288737_g = lib5BD4895D_gv_aP_Core_affectedPlayers;
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(auto78288737_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        lib5BD4895D_gf_showhidechatbox(lv_currentPlayer, true);
    }
    TriggerExecute(lib5BD4895D_gv_aP_Core_mapInit, true, false);
    lib5BD4895D_gv_aP_Core_initFinished = true;
    TriggerSendEvent(lib5BD4895D_gv_aP_Core_LOAD_FINISHED_EVENT);
    lib5BD4895D_gf_AP_Core_sendLocationLocal(lib5BD4895D_gv_aP_Core_locationInit);
}

void lib5BD4895D_gf_AP_Core_SwitchKerriganSwarmToPrimalZerg () {
    // Variable Declarations
    int lv_currentPlayer;
    int lv_color;

    // Automatic Variable Declarations
    playergroup auto7DAD13F7_g;

    // Variable Initialization
    lv_color = 1;

    // Implementation
    auto7DAD13F7_g = PlayerGroupAll();
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(auto7DAD13F7_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        if ((lib5BD4895D_gv_aP_Core_playerSwitchableFaction[lv_currentPlayer] == true) && (lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer] == lib5BD4895D_gv_aP_Core_Faction_KERRIGAN_SWARM)) {
            lib5BD4895D_gv_aP_Core_playerFactions[lv_currentPlayer] = lib5BD4895D_gv_aP_Core_Faction_PRIMAL_ZERG;
            lib5BD4895D_gv_aP_Core_rainbowKiller[lv_currentPlayer] = true;
            Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
            Wait(lib5BD4895D_gv_aP_Core_rainbowCyclePeriod, c_timeReal);
            if ((lib5BD4895D_gv_aP_Core_primalZergColor <= 15)) {
                lv_color = lib5BD4895D_gf_AP_Core_getPlayerColorByIndex(lib5BD4895D_gv_aP_Core_primalZergColor);
                PlayerSetColorIndex(lv_currentPlayer, lv_color, true);
            }
            else if ((lib5BD4895D_gv_aP_Core_primalZergColor == 16)) {
                lib5BD4895D_gf_AP_Core_rainbowController(lv_currentPlayer);
            }
        }

    }
}

void lib5BD4895D_gf_AP_Core_initObjectivePanel () {
    // Automatic Variable Declarations
    // Implementation
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeObjectivePanel, false);
    DialogControlHookupStandard(c_triggerControlTypePanel, "UIContainer/ConsoleUIContainer/AP_ObjectivePanel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_PrimaryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_PrimaryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_PrimaryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_SecondaryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_SECONDARY].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_SecondaryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_SECONDARY].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_SecondaryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_SECONDARY].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_ChallengeObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_CHALLENGE].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_ChallengeObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_CHALLENGE].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_ChallengeObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_CHALLENGE].lv_listPanel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeLabel, "AP_MasteryObjectivesLabel");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_MASTERY].lv_titleLabel = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypeImage, "AP_MasteryObjectiveBackground");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_MASTERY].lv_titleBackground = DialogControlLastCreated();
    DialogControlHookup(lib5BD4895D_gv_aP_Core_objectivePanel.lv_dialogPanel, c_triggerControlTypePanel, "AP_MasteryObjectiveListBox");
    DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), false);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_MASTERY].lv_listPanel = DialogControlLastCreated();
}

void lib5BD4895D_gf_AP_Core_addObjective (int lp_objective, int lp_category, bool lp_hasCounter, string lp_counterSuffix, int lp_counterValue, int lp_counterMax, bool lp_hasTimer, timer lp_timer) {
    // Variable Declarations
    int lv_new_panel;
    int lv_new_label;
    int lv_counter_value;
    int lv_categoryindex;
    int lv_rollingindex;
    int lv_visualrollingindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_new_panel = c_invalidDialogControlId;
    lv_new_label = c_invalidDialogControlId;
    lv_categoryindex = libNtve_gf_ArithmeticIntClamp(lp_category, 0, (lib5BD4895D_gv_AP_Core_objectiveUsedCategories - 1));
    lv_rollingindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex;
    lv_visualrollingindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex;

    // Implementation
    if (((lib5BD4895D_gv_AP_Core_objectiveCategoryEnabled[lv_categoryindex] == false) || (lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective) != -1))) {
        return ;
    }

    while ((lv_rollingindex > 0) && (ObjectiveGetPriority(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_rollingindex - 1)].lv_objective) < ObjectiveGetPriority(lp_objective))) {
        lib5BD4895D_gf_AP_Core_copyObjectiveData(lv_categoryindex, (lv_rollingindex - 1), lv_rollingindex, true);
        lv_rollingindex -= 1;
    }
    if ((ObjectiveGetState(lp_objective) != c_objectiveStateHidden)) {
        lib5BD4895D_gf_AP_Core_showObjectiveCategory(lv_categoryindex);
    }

    DialogControlCreateInPanel(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, c_triggerControlTypePanel);
    DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 700, 30);
    lv_new_panel = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(lv_new_panel, c_triggerControlTypeLabel, "ap_ObjectivePanel/AP_ObjectiveNameLabel");
    libNtve_gf_SetDialogItemText(DialogControlLastCreated(), lib5BD4895D_gf_AP_Core_objectiveText(ObjectiveGetName(lp_objective), lp_hasCounter, lp_counterSuffix, lp_counterValue, lp_counterMax, lp_hasTimer, lp_timer, false), PlayerGroupAll());
    DialogControlFadeTransparency(DialogControlLastCreated(), PlayerGroupAll(), 0.0, 100.0);
    lv_new_label = DialogControlLastCreated();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_label = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(lv_new_panel, c_triggerControlTypeImage, "ObjectivePanel/ObjectivePanelListBoxItem/CheckboxActive");
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_checkbox = DialogControlLastCreated();
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_panel = lv_new_panel;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective = lp_objective;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_hasCounter = lp_hasCounter;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_hasTimer = lp_hasTimer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_timer = lp_timer;
    if ((ObjectiveGetState(lp_objective) == c_objectiveStateHidden)) {
        DialogControlSetVisible(lv_new_panel, PlayerGroupAll(), false);
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex += 1;
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
    lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout(lv_categoryindex, lv_rollingindex, lp_hasTimer);
}

void lib5BD4895D_gf_AP_Core_showObjectiveCategory (int lp_categoryindex) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleBackground, PlayerGroupAll(), true);
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_listPanel, PlayerGroupAll(), true);
    if ((lp_categoryindex != lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY)) {
        DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), 200, DialogControlGetHeight(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY].lv_titleLabel, 1));
        DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[(lp_categoryindex - 1)].lv_listPanel, c_anchorBottomLeft, 0, lib5BD4895D_gv_aP_Core_ui_objectiveSectionSpacing);
        DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_listPanel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, c_anchorBottomLeft, 0, lib5BD4895D_gv_aP_Core_ui_objectiveListItemStartSpacing);
    }

}

void lib5BD4895D_gf_AP_Core_hideObjectiveCategory (int lp_categoryindex) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), false);
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleBackground, PlayerGroupAll(), false);
    DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_listPanel, PlayerGroupAll(), false);
    if ((lp_categoryindex != lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY)) {
        DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), 200, 0);
        DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[(lp_categoryindex - 1)].lv_listPanel, c_anchorBottomLeft, 0, 0);
        DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_listPanel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_titleLabel, c_anchorBottomLeft, 0, 0);
    }

}

void lib5BD4895D_gf_AP_Core_addObjectiveSimple (int lp_objective) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lib5BD4895D_gf_AP_Core_deducedObjectiveCategoryIndex(lp_objective), false, "", 0, 0, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveSimple (int lp_objective, int lp_category) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, false, "", 0, 0, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
}

void lib5BD4895D_gf_AP_Core_addObjectiveWithCounter (int lp_objective, string lp_counterSuffix, int lp_counterValue, int lp_counterMax) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lib5BD4895D_gf_AP_Core_deducedObjectiveCategoryIndex(lp_objective), true, lp_counterSuffix, lp_counterValue, lp_counterMax, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
}

void lib5BD4895D_gf_AP_Core_addCategoryObjectiveWithCounter (int lp_objective, int lp_category, string lp_counterSuffix, int lp_counterValue, int lp_counterMax) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lp_category, true, lp_counterSuffix, lp_counterValue, lp_counterMax, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
}

void lib5BD4895D_gf_AP_Core_addObjectiveWithTimer (int lp_objective, timer lp_timer) {
    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lib5BD4895D_gf_AP_Core_deducedObjectiveCategoryIndex(lp_objective), false, "", 0, 0, true, lp_timer);
}

void lib5BD4895D_gf_AP_Core_addObjectiveFromData (int lp_objective, string lp_data, string lp_counterSuffix, int lp_counterValue) {
    // Variable Declarations
    int lv_counterMax;
    text lv_name;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_counterMax = CatalogFieldValueGetAsInt(c_gameCatalogObjective, lp_data, "RequiredCount", c_playerAny);
    lv_name = StringExternal(CatalogFieldValueGet(c_gameCatalogObjective, lp_data, "Name", c_playerAny));

    // Implementation
    ObjectiveSetName(lp_objective, lv_name);
    if ((lv_counterMax > 1)) {
        lib5BD4895D_gf_AP_Core_addObjective(lp_objective, lib5BD4895D_gf_AP_Core_deducedObjectiveCategoryIndex(lp_objective), true, lp_counterSuffix, lp_counterValue, lv_counterMax, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
    }
    else {
        lib5BD4895D_gf_AP_Core_addObjective(lp_objective, 0, false, "", 0, 0, false, lib5BD4895D_gv_aP_Core_objectiveDefaultTimer);
    }
}

void lib5BD4895D_gf_AP_Core_enableObjectiveCounter (int lp_objective, string lp_counterSuffix, int lp_counterValue, int lp_counterMax) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_hasCounter = true;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_setObjectiveCounter (int lp_objective, int lp_counterValue) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterValue = lp_counterValue;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_setObjectiveCounterSuffix (int lp_objective, string lp_counterSuffix) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterSuffix = lp_counterSuffix;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_setObjectiveCounterMax (int lp_objective, int lp_counterMax) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_counterMax = lp_counterMax;
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
}

void lib5BD4895D_gf_AP_Core_updateObjectiveDescription (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
}

trigger auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective;

void lib5BD4895D_gf_AP_Core_addObjectiveExtraLine (int lp_objective) {
    auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective = lp_objective;

    if (auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_TriggerFunc (bool testConds, bool runActions) {
    int lp_objective = auto_lib5BD4895D_gf_AP_Core_addObjectiveExtraLine_lp_objective;

    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines += 1;
    DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), 700, (30 + 16 * lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines));
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
    return true;
}

void lib5BD4895D_gf_AP_Core_deleteObjective (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;
    int lv_visualrollingindex;
    int lv_timerindex;
    int lv_timercopyindex;

    // Automatic Variable Declarations
    int auto7A5E3CC7_ae;
    const int auto7A5E3CC7_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    DialogControlDestroy(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
    auto7A5E3CC7_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
    lv_rollingindex = lv_objectiveindex;
    for ( ; ( (auto7A5E3CC7_ai >= 0 && lv_rollingindex <= auto7A5E3CC7_ae) || (auto7A5E3CC7_ai < 0 && lv_rollingindex >= auto7A5E3CC7_ae) ) ; lv_rollingindex += auto7A5E3CC7_ai ) {
        lib5BD4895D_gf_AP_Core_copyObjectiveData(lv_categoryindex, (lv_rollingindex + 1), lv_rollingindex, true);
    }
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
}

void lib5BD4895D_gf_AP_Core_showObjective (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_rollingindex;
    bool lv_hidecategory;
    int lv_visualrollingindex;

    // Automatic Variable Declarations
    int auto05D885EE_ae;
    const int auto05D885EE_ai = 1;

    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);
    lv_hidecategory = true;

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    if ((ObjectiveGetState(lp_objective) == c_objectiveStateHidden)) {
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), false);
        auto05D885EE_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_rollingindex = 0;
        for ( ; ( (auto05D885EE_ai >= 0 && lv_rollingindex <= auto05D885EE_ae) || (auto05D885EE_ai < 0 && lv_rollingindex >= auto05D885EE_ae) ) ; lv_rollingindex += auto05D885EE_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective != c_invalidObjectiveId) && (ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_rollingindex].lv_objective) != c_objectiveStateHidden)) {
                lv_hidecategory = false;
            }

        }
        if ((lv_hidecategory == true)) {
            lib5BD4895D_gf_AP_Core_hideObjectiveCategory(lv_categoryindex);
        }

    }
    else {
        DialogControlSetVisible(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), true);
        lib5BD4895D_gf_AP_Core_showObjectiveCategory(lv_categoryindex);
        libNtve_gf_SetDialogItemTextWriteout(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, true, PlayerGroupAll());
        lib5BD4895D_gf_AP_Core_updateObjectiveText(lv_categoryindex, lv_objectiveindex);
        lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout(lv_categoryindex, lv_objectiveindex, false);
    }
    lib5BD4895D_gf_AP_Core_resizeObjectivePanel();
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex;
bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer;

void lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout (int lp_categoryIndex, int lp_objectiveIndex, bool lp_addTimer) {
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex = lp_categoryIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex = lp_objectiveIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer = lp_addTimer;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_TriggerFunc (bool testConds, bool runActions) {
    int lp_categoryIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_categoryIndex;
    int lp_objectiveIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_objectiveIndex;
    bool lp_addTimer = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedWriteout_lp_addTimer;

    // Variable Declarations
    int lv_label;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_label = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_label;

    // Implementation
    while (!((lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait == false))) {
        Wait(0.1, c_timeGame);
    }
    if ((ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_objective) == c_objectiveStateHidden)) {
    }
    else {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting = true;
        DialogControlFadeTransparency(lv_label, PlayerGroupAll(), 2.5, 0.0);
        SoundPlayForPlayer(SoundLink("UI_ObjectiveText", -1), c_maxPlayers, PlayerGroupAll(), 100.0, 0.0);
        Wait(2.5, c_timeReal);
        SoundStop(SoundLastPlayed(), false);
        libNtve_gf_SetDialogItemTextWriteout(lv_label, false, PlayerGroupAll());
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting = false;
    }
    if ((lp_addTimer == true) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_hasTimer == true)) {
        TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, true);
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][0] = lp_categoryIndex;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][1] = lp_objectiveIndex;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex += 1;
    }

    return true;
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger = null;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex;
int auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex;

void lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate (int lp_categoryIndex, int lp_objectiveIndex) {
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex = lp_categoryIndex;
    auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex = lp_objectiveIndex;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_TriggerFunc (bool testConds, bool runActions) {
    int lp_categoryIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_categoryIndex;
    int lp_objectiveIndex = auto_lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate_lp_objectiveIndex;

    // Automatic Variable Declarations
    // Implementation
    while (!((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_waiting == false) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait == false))) {
        Wait(0.1, c_timeGame);
    }
    if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryIndex].lv_objectives[lp_objectiveIndex].lv_objective == c_invalidObjectiveId)) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_updateObjectiveText(lp_categoryIndex, lp_objectiveIndex);
    return true;
}

void lib5BD4895D_gf_AP_Core_resizeObjectivePanel () {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;
    int lv_visualindex;
    int lv_extralines;
    int lv_hidden;

    // Automatic Variable Declarations
    int auto868030BA_ae;
    const int auto868030BA_ai = 1;
    int autoFD7B9CCE_ae;
    const int autoFD7B9CCE_ai = 1;

    // Variable Initialization

    // Implementation
    auto868030BA_ae = (lib5BD4895D_gv_AP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto868030BA_ai >= 0 && lv_categoryindex <= auto868030BA_ae) || (auto868030BA_ai < 0 && lv_categoryindex >= auto868030BA_ae) ) ; lv_categoryindex += auto868030BA_ai ) {
        lv_extralines = 0;
        lv_hidden = 0;
        autoFD7B9CCE_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_objectiveindex = 0;
        for ( ; ( (autoFD7B9CCE_ai >= 0 && lv_objectiveindex <= autoFD7B9CCE_ae) || (autoFD7B9CCE_ai < 0 && lv_objectiveindex >= autoFD7B9CCE_ae) ) ; lv_objectiveindex += autoFD7B9CCE_ai ) {
            if ((ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_objective) == c_objectiveStateHidden)) {
                lv_hidden += 1;
            }
            else {
                lv_extralines += lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_extraLines;
            }
            lv_visualindex = lv_objectiveindex;
            while ((lv_visualindex > 0) && (ObjectiveGetState(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_visualindex - 1)].lv_objective) == c_objectiveStateHidden)) {
                lv_visualindex -= 1;
            }
            if ((lv_visualindex > 0)) {
                DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[(lv_visualindex - 1)].lv_panel, c_anchorBottomLeft, 0, 5);
            }
            else {
                DialogControlSetPositionRelative(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, PlayerGroupAll(), c_anchorTopLeft, lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, c_anchorTopLeft, 0, 0);
            }
        }
        DialogControlSetSize(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_listPanel, PlayerGroupAll(), 700, (35 * (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - lv_hidden) - 5 + 16 * lv_extralines));
    }
}

int lib5BD4895D_gf_AP_Core_objectiveIndex (int lp_objective, int lp_categoryindex) {
    // Variable Declarations
    int lv_index;

    // Automatic Variable Declarations
    int auto8ED4B630_ae;
    const int auto8ED4B630_ai = 1;

    // Variable Initialization

    // Implementation
    if ((lp_categoryindex == -1)) {
        return -1;
    }

    auto8ED4B630_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_rollingIndex - 1);
    lv_index = 0;
    for ( ; ( (auto8ED4B630_ai >= 0 && lv_index <= auto8ED4B630_ae) || (auto8ED4B630_ai < 0 && lv_index >= auto8ED4B630_ae) ) ; lv_index += auto8ED4B630_ai ) {
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_categoryindex].lv_objectives[lv_index].lv_objective == lp_objective)) {
            return lv_index;
        }

    }
    return -1;
}

void lib5BD4895D_gf_AP_Core_copyObjectiveData (int lp_category, int lp_from, int lp_to, bool lp_cleanFrom) {
    // Variable Declarations
    bool lv_previoustimer;
    int lv_timerindex;
    int lv_timerrollingindex;

    // Automatic Variable Declarations
    int auto9DE4E82E_ae;
    const int auto9DE4E82E_ai = 1;
    int autoC1E1AF7F_ae;
    const int autoC1E1AF7F_ai = 1;
    int autoAE91E7AF_ae;
    const int autoAE91E7AF_ai = 1;

    // Variable Initialization
    lv_previoustimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasTimer;

    // Implementation
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_panel = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_panel;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_label = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_label;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_checkbox = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checkbox;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_objective = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_objective;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasCounter = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasCounter;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterSuffix = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterSuffix;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterValue = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterValue;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_counterMax = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterMax;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_hasTimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_timer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_timer;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_extraLines = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_extraLines;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_waiting = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_waiting;
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_to].lv_finished = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_finished;
    if ((lv_previoustimer == true)) {
        auto9DE4E82E_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
        lv_timerindex = 0;
        for ( ; ( (auto9DE4E82E_ai >= 0 && lv_timerindex <= auto9DE4E82E_ae) || (auto9DE4E82E_ai < 0 && lv_timerindex >= auto9DE4E82E_ae) ) ; lv_timerindex += auto9DE4E82E_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0] == lp_category) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] == lp_to)) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
                autoC1E1AF7F_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
                lv_timerrollingindex = lv_timerindex;
                for ( ; ( (autoC1E1AF7F_ai >= 0 && lv_timerrollingindex <= autoC1E1AF7F_ae) || (autoC1E1AF7F_ai < 0 && lv_timerrollingindex >= autoC1E1AF7F_ae) ) ; lv_timerrollingindex += autoC1E1AF7F_ai ) {
                    lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerrollingindex][0] = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[(lv_timerrollingindex + 1)][0];
                    lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerrollingindex][1] = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[(lv_timerrollingindex + 1)][1];
                }
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][0] = -1;
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex][1] = -1;
            }

        }
        if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex == 0)) {
            TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, false);
        }

    }

    if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer == true)) {
        autoAE91E7AF_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
        lv_timerindex = 0;
        for ( ; ( (autoAE91E7AF_ai >= 0 && lv_timerindex <= autoAE91E7AF_ae) || (autoAE91E7AF_ai < 0 && lv_timerindex >= autoAE91E7AF_ae) ) ; lv_timerindex += autoAE91E7AF_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0] == lp_category) && (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] == lp_from)) {
                lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1] = lp_to;
            }

        }
    }

    if ((lp_cleanFrom == true)) {
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_panel = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_label = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_checkbox = c_invalidDialogControlId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_objective = c_invalidObjectiveId;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasCounter = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterSuffix = "";
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterValue = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_counterMax = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_hasTimer = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_timer = lib5BD4895D_gv_aP_Core_objectiveDefaultTimer;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_extraLines = 0;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_waiting = false;
        lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_from].lv_finished = false;
    }

}

int lib5BD4895D_gf_AP_Core_objectiveCategoryIndex (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_index;

    // Automatic Variable Declarations
    int auto15F59FEB_ae;
    const int auto15F59FEB_ai = 1;
    int auto8020B278_ae;
    const int auto8020B278_ai = 1;

    // Variable Initialization

    // Implementation
    auto15F59FEB_ae = (lib5BD4895D_gv_AP_Core_objectiveUsedCategories - 1);
    lv_categoryindex = 0;
    for ( ; ( (auto15F59FEB_ai >= 0 && lv_categoryindex <= auto15F59FEB_ae) || (auto15F59FEB_ai < 0 && lv_categoryindex >= auto15F59FEB_ae) ) ; lv_categoryindex += auto15F59FEB_ai ) {
        auto8020B278_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_rollingIndex - 1);
        lv_index = 0;
        for ( ; ( (auto8020B278_ai >= 0 && lv_index <= auto8020B278_ae) || (auto8020B278_ai < 0 && lv_index >= auto8020B278_ae) ) ; lv_index += auto8020B278_ai ) {
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_index].lv_objective == lp_objective)) {
                return lv_categoryindex;
            }

        }
    }
    return -1;
}

int lib5BD4895D_gf_AP_Core_deducedObjectiveCategoryIndex (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_index;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((ObjectiveGetPrimary(ObjectiveLastCreated()) == true)) {
        return lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_PRIMARY;
    }
    else {
        return lib5BD4895D_gv_AP_Core_OBJECTIVE_CATEGORY_SECONDARY;
    }
    return -1;
}

text lib5BD4895D_gf_AP_Core_objectiveText (text lp_text, bool lp_hasCounter, string lp_counterSuffix, int lp_counterValue, int lp_counterMax, bool lp_hasTimer, timer lp_timer, bool lp_finished) {
    // Variable Declarations
    text lv_countertext;
    text lv_countersuffix;
    text lv_countermax;
    text lv_timer;
    text lv_finishedstrip;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_countertext = StringToText("");
    lv_countersuffix = StringToText("");
    lv_countermax = StringToText("");
    lv_timer = StringToText("");
    lv_finishedstrip = StringToText("");

    // Implementation
    if ((lp_hasCounter == true)) {
        if ((StringLength(lp_counterSuffix) > 0)) {
            if ((StringFind(lp_counterSuffix, ")", c_stringCase) == 1)) {
                lv_countersuffix = StringToText(lp_counterSuffix);
            }
            else {
                lv_countersuffix = (StringExternal("Param/Value/lib_5BD4895D_237AD9BA") + StringToText(lp_counterSuffix));
            }
        }

        if ((lp_counterMax > 0)) {
            lv_countermax = (StringExternal("Param/Value/lib_5BD4895D_C6C79B7C") + IntToText(lp_counterMax));
        }

        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "style_start", StringExternal("Param/Value/lib_5BD4895D_BDCEB2A5"));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_val", IntToText(lp_counterValue));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_max", lv_countermax);
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "counter_suffix", lv_countersuffix);
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_A595B870", "style_end", StringExternal("Param/Value/lib_5BD4895D_D237E34D"));
        lv_countertext = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_A595B870"));
    }

    if ((lp_hasTimer == true)) {
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "style_start", StringExternal("Param/Value/lib_5BD4895D_AA4B4F01"));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "timer_text", TextTimeFormat(StringToText("<min2/>:<sec2/>"), FixedToInt(TimerGetRemaining(lp_timer))));
        TextExpressionSetToken("Param/Expression/lib_5BD4895D_EB3C1E76", "style_end", StringExternal("Param/Value/lib_5BD4895D_2F0860FC"));
        lv_timer = (TextExpressionAssemble("Param/Expression/lib_5BD4895D_EB3C1E76"));
    }

    if ((lp_finished == true)) {
        lv_finishedstrip = TextExpressionAssemble("Param/Expression/lib_5BD4895D_AEBB48E6");
    }

    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "finished", lv_finishedstrip);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "text", lp_text);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "counter_text", lv_countertext);
    TextExpressionSetToken("Param/Expression/lib_5BD4895D_C0906947", "timer_text", lv_timer);
    return (TextExpressionAssemble("Param/Expression/lib_5BD4895D_C0906947"));
}

void lib5BD4895D_gf_AP_Core_updateObjectiveText (int lp_category, int lp_index) {
    // Variable Declarations
    int lv_objective;
    bool lv_hascounter;
    int lv_countervalue;
    int lv_countermax;
    string lv_countersuffix;
    bool lv_hastimer;
    timer lv_timer;
    bool lv_finished;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_objective = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_objective;
    lv_hascounter = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_hasCounter;
    lv_countervalue = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterValue;
    lv_countermax = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterMax;
    lv_countersuffix = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_counterSuffix;
    lv_hastimer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_hasTimer;
    lv_timer = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_timer;
    lv_finished = lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_finished;

    // Implementation
    libNtve_gf_SetDialogItemText(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lp_category].lv_objectives[lp_index].lv_label, lib5BD4895D_gf_AP_Core_objectiveText(ObjectiveGetName(lv_objective), lv_hascounter, lv_countersuffix, lv_countervalue, lv_countermax, lv_hastimer, lv_timer, lv_finished), PlayerGroupAll());
}

void lib5BD4895D_gf_AP_Core_setObjectiveCompleted (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_finished = true;
    libNtve_gf_SetDialogItemStyle(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, "ObjectivePanelCompleted", PlayerGroupAll());
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    DialogControlCreateInPanelFromTemplate(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_panel, c_triggerControlTypeImage, "ObjectivePanel/ObjectivePanelListBoxItem/Checkmark");
}

void lib5BD4895D_gf_AP_Core_setObjectiveFailed (int lp_objective) {
    // Variable Declarations
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_categoryindex = lib5BD4895D_gf_AP_Core_objectiveCategoryIndex(lp_objective);
    lv_objectiveindex = lib5BD4895D_gf_AP_Core_objectiveIndex(lp_objective, lv_categoryindex);

    // Implementation
    if ((lv_objectiveindex == -1)) {
        return ;
    }

    lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_finished = true;
    libNtve_gf_SetDialogItemStyle(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_label, "ObjectivePanelFailed", PlayerGroupAll());
    lib5BD4895D_gf_AP_Core_objectiveThreadedUpdate(lv_categoryindex, lv_objectiveindex);
    libNtve_gf_SetDialogItemImage(lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_checkbox, ("@@UI/ObjectivePanelCheckboxFailed"), PlayerGroupAll());
}

trigger auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger = null;
fixed auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time;

void lib5BD4895D_gf_AP_Core_objectiveFadeHelper (fixed lp_time) {
    auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time = lp_time;

    if (auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger == null) {
        auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger = TriggerCreate("auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_TriggerFunc");
    }

    TriggerExecute(auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_Trigger, false, false);
}

bool auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_TriggerFunc (bool testConds, bool runActions) {
    fixed lp_time = auto_lib5BD4895D_gf_AP_Core_objectiveFadeHelper_lp_time;

    // Automatic Variable Declarations
    // Implementation
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait = true;
    Wait(lp_time, c_timeReal);
    lib5BD4895D_gv_aP_Core_objectivePanel.lv_fadeWait = false;
    return true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_controllerInit
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_controllerInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    if (lib5BD4895D_gf_AP_Core_IsControllerNotInitialized()) {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
        libNtve_gf_CreateUnitsWithDefaultFacing(1, "AP_Core_Controller2", c_unitCreateIgnorePlacement, 1, Point(0.0, 0.0));
    }

    lib5BD4895D_gv_aP_Core_controller = UnitGroupUnit(UnitGroup("AP_Core_Controller", 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    lib5BD4895D_gv_aP_Core_controller2 = UnitGroupUnit(UnitGroup("AP_Core_Controller2", 1, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), 1);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_controllerInit_Init () {
    lib5BD4895D_gt_AP_Core_controllerInit = TriggerCreate("lib5BD4895D_gt_AP_Core_controllerInit_Func");
    TriggerAddEventMapInit(lib5BD4895D_gt_AP_Core_controllerInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_dontHideController
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_dontHideController_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libNtve_gf_UnitIsHidden(lib5BD4895D_gv_aP_Core_controller) == true))) {
            return false;
        }

        if (!((libNtve_gf_UnitIsHidden(lib5BD4895D_gv_aP_Core_controller2) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_ShowHideUnit(lib5BD4895D_gv_aP_Core_controller, true);
    libNtve_gf_ShowHideUnit(lib5BD4895D_gv_aP_Core_controller2, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_dontHideController_Init () {
    lib5BD4895D_gt_AP_Core_dontHideController = TriggerCreate("lib5BD4895D_gt_AP_Core_dontHideController_Func");
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_dontHideController, 0.1, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_keepControllerAlive
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_keepControllerAlive_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(lib5BD4895D_gf_AP_Core_IsControllerNotInitialized())) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_refreshController();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_keepControllerAlive_Init () {
    lib5BD4895D_gt_AP_Core_keepControllerAlive = TriggerCreate("lib5BD4895D_gt_AP_Core_keepControllerAlive_Func");
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_keepControllerAlive, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: update chatbox
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_updatechatbox_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_sendchatmessage(EventPlayer(), StringSub(EventChatMessage(false), 13, StringLength(EventChatMessage(false))));
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_updatechatbox_Init () {
    lib5BD4895D_gt_updatechatbox = TriggerCreate("lib5BD4895D_gt_updatechatbox_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_updatechatbox, c_playerAny, "?SendMessage", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: chatbox buttons
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_chatboxbuttons_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_sizex;
    int lv_sizey;
    int lv_chatlblsizex;
    int lv_chatlblsizey;
    int lv_currentoffsety;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_sizex = 500;
    lv_sizey = 350;
    lv_chatlblsizex = (lv_sizex - 110);
    lv_chatlblsizey = (lv_sizey - 100);

    // Conditions
    if (testConds) {
        if (!((DialogControlGetDialog(EventDialogControl()) == lib5BD4895D_gv_chatbox.lv_mainpanel))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_scrollbottonbtn)) {
        DialogControlSetPosition(lib5BD4895D_gv_chatbox.lv_chatlabel, PlayerGroupSingle(EventPlayer()), c_anchorBottom, 0, 0);
    }
    else {
        lv_currentoffsety = DialogControlGetOffsetY(lib5BD4895D_gv_chatbox.lv_chatlabel, EventPlayer());
        if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_scrolldownbtn)) {
            if ((lv_currentoffsety < 0)) {
                DialogControlSetPosition(lib5BD4895D_gv_chatbox.lv_chatlabel, PlayerGroupSingle(EventPlayer()), c_anchorBottom, 0, (lv_currentoffsety + lib5BD4895D_gv_chatbox.lv_scrollstrength));
            }

        }
        else {
            if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_scrollupbtn)) {
                DialogControlSetPosition(lib5BD4895D_gv_chatbox.lv_chatlabel, PlayerGroupSingle(EventPlayer()), c_anchorBottom, 0, (lv_currentoffsety - lib5BD4895D_gv_chatbox.lv_scrollstrength));
            }
            else {
                if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_sizedownbtn)) {
                    if ((lib5BD4895D_gv_chatbox.lv_size > -1)) {
                        lib5BD4895D_gv_chatbox.lv_size -= 1;
                        lv_sizey = (242 + (36 * lib5BD4895D_gv_chatbox.lv_size));
                        lv_chatlblsizey = (lv_sizey - 136);
                        DialogSetSize(lib5BD4895D_gv_chatbox.lv_mainpanel, lv_sizex, lv_sizey);
                        DialogSetSize(lib5BD4895D_gv_chatbox.lv_chatpanel, lv_chatlblsizex, lv_chatlblsizey);
                    }

                }
                else {
                    if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_sizeupbtn)) {
                        if ((lib5BD4895D_gv_chatbox.lv_size < 10)) {
                            lib5BD4895D_gv_chatbox.lv_size += 1;
                            lv_sizey = (242 + (36 * lib5BD4895D_gv_chatbox.lv_size));
                            lv_chatlblsizey = (lv_sizey - 136);
                            DialogSetSize(lib5BD4895D_gv_chatbox.lv_mainpanel, lv_sizex, lv_sizey);
                            DialogSetSize(lib5BD4895D_gv_chatbox.lv_chatpanel, lv_chatlblsizex, lv_chatlblsizey);
                        }

                    }
                    else {
                        if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_hidebtn)) {
                            DialogSetVisible(lib5BD4895D_gv_chatbox.lv_mainpanel, PlayerGroupSingle(EventPlayer()), false);
                            DialogSetVisible(lib5BD4895D_gv_chatbox.lv_chatpanel, PlayerGroupSingle(EventPlayer()), false);
                            DialogSetVisible(lib5BD4895D_gv_chatbox.lv_hiddenpanel, PlayerGroupSingle(EventPlayer()), true);
                        }

                    }
                }
            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_chatboxbuttons_Init () {
    lib5BD4895D_gt_chatboxbuttons = TriggerCreate("lib5BD4895D_gt_chatboxbuttons_Func");
    TriggerAddEventDialogControl(lib5BD4895D_gt_chatboxbuttons, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: chatbox show
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_chatboxshow_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((DialogControlGetDialog(EventDialogControl()) == lib5BD4895D_gv_chatbox.lv_hiddenpanel))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == lib5BD4895D_gv_chatbox.lv_showbtn)) {
        DialogSetVisible(lib5BD4895D_gv_chatbox.lv_hiddenpanel, PlayerGroupSingle(EventPlayer()), false);
        DialogSetVisible(lib5BD4895D_gv_chatbox.lv_mainpanel, PlayerGroupSingle(EventPlayer()), true);
        DialogSetVisible(lib5BD4895D_gv_chatbox.lv_chatpanel, PlayerGroupSingle(EventPlayer()), true);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_chatboxshow_Init () {
    lib5BD4895D_gt_chatboxshow = TriggerCreate("lib5BD4895D_gt_chatboxshow_Func");
    TriggerAddEventDialogControl(lib5BD4895D_gt_chatboxshow, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_rainbowColorsInit
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_rainbowColorsInit_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_rainbowColors[0] = 1;
    lib5BD4895D_gv_aP_Core_rainbowColors[1] = 6;
    lib5BD4895D_gv_aP_Core_rainbowColors[2] = 5;
    lib5BD4895D_gv_aP_Core_rainbowColors[3] = 7;
    lib5BD4895D_gv_aP_Core_rainbowColors[4] = 3;
    lib5BD4895D_gv_aP_Core_rainbowColors[5] = 2;
    lib5BD4895D_gv_aP_Core_rainbowColors[6] = 4;
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_rainbowColorsInit_Init () {
    lib5BD4895D_gt_AP_Core_rainbowColorsInit = TriggerCreate("lib5BD4895D_gt_AP_Core_rainbowColorsInit_Func");
    TriggerAddEventMapInit(lib5BD4895D_gt_AP_Core_rainbowColorsInit);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_giveStartingResources
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_giveStartingResources_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_supplyAmount;
    int lv_currentPlayer;

    // Automatic Variable Declarations
    playergroup autoED0BFB0D_g;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gv_aP_Core_BonusMinerals = StringToInt(StringWord(EventChatMessage(false), 2));
    lib5BD4895D_gv_aP_Core_BonusVespene = StringToInt(StringWord(EventChatMessage(false), 3));
    lv_supplyAmount = StringToInt(StringWord(EventChatMessage(false), 4));
    autoED0BFB0D_g = lib5BD4895D_gv_aP_Core_affectedPlayers;
    lv_currentPlayer = -1;
    while (true) {
        lv_currentPlayer = PlayerGroupNextPlayer(autoED0BFB0D_g, lv_currentPlayer);
        if (lv_currentPlayer < 0) { break; }
        PlayerModifyPropertyInt(lv_currentPlayer, c_playerPropMinerals, c_playerPropOperAdd, lib5BD4895D_gv_aP_Core_BonusMinerals);
        PlayerModifyPropertyInt(lv_currentPlayer, c_playerPropVespene, c_playerPropOperAdd, lib5BD4895D_gv_aP_Core_BonusVespene);
        lib5BD4895D_gf_AP_Core_giveBonusSupplies(lv_currentPlayer, lv_supplyAmount);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_giveStartingResources_Init () {
    lib5BD4895D_gt_AP_Core_giveStartingResources = TriggerCreate("lib5BD4895D_gt_AP_Core_giveStartingResources_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_giveStartingResources, c_playerAny, "?GiveResources", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_setFactionColorHandler
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_setFactionColorHandler_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_faction;
    int lv_color;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_faction = "";

    // Actions
    if (!runActions) {
        return true;
    }

    lv_faction = StringWord(EventChatMessage(false), 2);
    lv_color = StringToInt(StringWord(EventChatMessage(false), 3));
    lib5BD4895D_gf_AP_Core_setFactionColor(lv_faction, lv_color);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_setFactionColorHandler_Init () {
    lib5BD4895D_gt_AP_Core_setFactionColorHandler = TriggerCreate("lib5BD4895D_gt_AP_Core_setFactionColorHandler_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_setFactionColorHandler, c_playerAny, "?SetColor", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Triggers_loadFinished
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Triggers_loadFinished_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    lib5BD4895D_gf_AP_Core_onLoadFinished();
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Triggers_loadFinished_Init () {
    lib5BD4895D_gt_AP_Triggers_loadFinished = TriggerCreate("lib5BD4895D_gt_AP_Triggers_loadFinished_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Triggers_loadFinished, c_playerAny, "?LoadFinished", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_clearChat
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_clearChat_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIClearMessages(PlayerGroupAll(), c_messageAreaChat);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_clearChat_Init () {
    lib5BD4895D_gt_AP_Core_clearChat = TriggerCreate("lib5BD4895D_gt_AP_Core_clearChat_Func");
    TriggerAddEventChatMessage(lib5BD4895D_gt_AP_Core_clearChat, c_playerAny, "", false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: AP_Core_objectiveTimerUpdate
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_timerindex;
    int lv_categoryindex;
    int lv_objectiveindex;

    // Automatic Variable Declarations
    int autoF95675BF_ae;
    const int autoF95675BF_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    autoF95675BF_ae = (lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerRollingIndex - 1);
    lv_timerindex = 0;
    for ( ; ( (autoF95675BF_ai >= 0 && lv_timerindex <= autoF95675BF_ae) || (autoF95675BF_ai < 0 && lv_timerindex >= autoF95675BF_ae) ) ; lv_timerindex += autoF95675BF_ai ) {
        lv_categoryindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][0];
        if ((lv_categoryindex >= 0)) {
            lv_objectiveindex = lib5BD4895D_gv_aP_Core_objectivePanel.lv_timerObjectives[lv_timerindex][1];
            if ((lib5BD4895D_gv_aP_Core_objectivePanel.lv_categories[lv_categoryindex].lv_objectives[lv_objectiveindex].lv_waiting == false)) {
                lib5BD4895D_gf_AP_Core_updateObjectiveText(lv_categoryindex, lv_objectiveindex);
            }

        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Init () {
    lib5BD4895D_gt_AP_Core_objectiveTimerUpdate = TriggerCreate("lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Func");
    TriggerEnable(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, false);
    TriggerAddEventTimePeriodic(lib5BD4895D_gt_AP_Core_objectiveTimerUpdate, 1.0, c_timeAI);
}

void lib5BD4895D_InitTriggers () {
    lib5BD4895D_gt_AP_Core_controllerInit_Init();
    lib5BD4895D_gt_AP_Core_dontHideController_Init();
    lib5BD4895D_gt_AP_Core_keepControllerAlive_Init();
    lib5BD4895D_gt_updatechatbox_Init();
    lib5BD4895D_gt_chatboxbuttons_Init();
    lib5BD4895D_gt_chatboxshow_Init();
    lib5BD4895D_gt_AP_Core_rainbowColorsInit_Init();
    lib5BD4895D_gt_AP_Core_giveStartingResources_Init();
    lib5BD4895D_gt_AP_Core_setFactionColorHandler_Init();
    lib5BD4895D_gt_AP_Triggers_loadFinished_Init();
    lib5BD4895D_gt_AP_Core_clearChat_Init();
    lib5BD4895D_gt_AP_Core_objectiveTimerUpdate_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib5BD4895D_InitLib_completed = false;

void lib5BD4895D_InitLib () {
    if (lib5BD4895D_InitLib_completed) {
        return;
    }

    lib5BD4895D_InitLib_completed = true;

    lib5BD4895D_InitLibraries();
    lib5BD4895D_InitVariables();
    lib5BD4895D_InitTriggers();
}

